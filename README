From: Daniel Bush 
Updated: Sun Jul 18 10:46:28 EST 2010
Date: Fri Aug 29 09:18:39 EST 2008
Subject: What is UnitJS?

For the impatient, head over to the QUICKSTART file.
This is recommended reading regardless of your impatience
level.
If you're really impatient, head over to the templates/
directory and use the templates there as the basis for
your application.

UnitJS is simplified unit testing framework.
It was originally put together overnight using some of the
code used in JSUnit.net.  By intention, it does not have a
lot of the added features of JSUnit.
I wanted something simple which I could then hack into more
complex or automated solutions as I required.

UnitJS's main purpose is to allow you to write and organise
your tests and run them in some desired order.

WARNING: Most work has been done in Firefox and no thought
has been given at the moment to providing helpful stack
traces in IE or other browsers.  Unitjs does try to help by
telling you which assertion failed or if a general error
occured on or before a certain assertion in your test.

UnitJS can work with any printer to print its results.
There is a printer interface that any printer handed to the
UnitJS test runner will need to implement.  This is
described in: unitjs.interfaces.js

UnitJS comes with an existing printer (called
DefaultPrinter) that works in the browser and prints results
to an HTML DOM.



CONTACT
-----------------------------------------------------------
Any issues, please contact me (Daniel Bush):
email: dlb.id.au -at-- gmail.com.


NAMESPACING / PACKAGING
-----------------------------------------------------------
Unitjs follows the guidelines set out in README.modules.html 
and is an example of the application of those guidelines.
The latest standard can be found at:
http://js.web17.com.au/specs/packaging-and-namespacing/index.xhtml


DEVELOPERS / IN-DEPTH DOCUMENTATION
-----------------------------------------------------------
To get a good understanding of the code in unitjs.js and
unitjs.printers.js, first see QUICKSTART and then see
unitjs.interfaces.js.  This file sets out the key interfaces
which the various parts of the unitjs system assume and use
to get things done. 
Then proceed over to the source code in unitjs.js and
unitjs.printers.js.
Project changes are of course logged to CHANGELOG file.


GETTING STARTED
-----------------------------------------------------------
See QUICKSTART.
See templates/ directory for templates you can quickly use.
See exmples/ directory for standalone (examples.html) and
an example using sections.
Also see tests/ which shows a good use of test sections
and how the DefaultPrinter helps you to drill down on 
pending and failed tests.


Regards,
Daniel Bush
