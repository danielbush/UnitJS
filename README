From: Daniel Bush 
Date: Fri Aug 29 09:18:39 EST 2008
Subject: What is UnitJS?

UnitJS is simplified unit testing framework.
It was put together quickly overnight using some of the code
used in JSUnit.net.  It does not have anything like the
functionality of JSUnit.

UnitJS's main purpose is to allow you to collect together
your assertions and run them in some desired order; the results
are added to the html page in which the tests have been
embedded.

I want something simple which I can then hack into more
complex or automated solutions as I require.

Currently, UnitJS has to work in the browser environment
(where most javascript lives anyway) and uses the html page
(DOM) to display its results.

Any issues, please contact me: dlb.id.au -at-- gmail.com.
Regards,
Daniel Bush


GETTING STARTED

Suppose you have an html file and your js files then:
<html>
  <head>
    <script type="text/javascript" src="path/to/unitjs/assertions.js" ></script>
    <script type="text/javascript" src="your_app.js" ></script>
    <script type="text/javascript" src="your_tests.js" ></script>
  </head>
  <body>
    <input type="button"
      onclick="UNITJS.runner.run(testOrder,tests)" />

      NOTES:
      testOrder: is an array of test names.
      tests: is a hash of test names and their functions.

      You could also put your_tests.js in this file etc etc.
  </body>
</html>

(This html file is a rough guide of the layout you should use
and is intended only to give you an idea of what to do.)
In your_tests.js:

  var testOrder=[];
  var tests={};
  var A = UNITJS.assertions;
  testOrder.push('testAssert');
  tests['testAssert'] = function() {
    A.assert("true should be true", true);
    A.assert(true);
  }
  ... etc ...
  
That should be it.

Peruse assertions.js to see what type of assert functions
are available.

Also see:
  assertionTests.html 
which shows unitjs in action testing itself.
