DB - Daniel Bush

Currently implementing (@May-09)
- Clean up the argument parsing for assertions
  - Currently there are several util methods
      utils.argumentsIncludeComments = function(expectedNumberOfNonCommentArgs, args) {
      utils.commentArg = function(expectedNumberOfNonCommentArgs, args) {
      utils.nonCommentArg = function( desiredNonCommentArgIndex, 
      utils._validateArguments = function(expectedNumberOfNonCommentArgs, args) {
    Not sure if I want to keep it this way.
    The (expectedNumberOfNonCommentArgs, args) interface might be a necessary evil if there
    is some variability in this when calling all the different assertions - is there???
    
* Returning which assertion has failed [DB]
* Counting tests and assertions [DB]
* Improved stack trace [DB]
* Make sure we fail when we fail and error when we error [DB]
* an error should should say ERROR; and a fail should say FAIL [DB]
* fail and error stack traces both make use of firefox or ie7 
  stack traces, not the old jsunit stack trace [DB]
  * the issue is when an assertion fails, the old jsunit code
    uses its own customised stack trace, which doesn't work
    well with anonymous / modularised javascript.
    We should 
    - record which assertion in the test failed eg 5th assertion in test X
    - throw an error and get its real stack trace just below the failed
      assertion ; unfortunately, this might be quite hard to do.


Latest
* Modularised the unitJS module into several submodules. [DB]
* Implemented namespacing/packaging standard - see http://js.web17.com.au/specs/packaging-and-namespacing/index.xhtml [DB]

Version 0.1
* Project started on 28-Aug-08. [DB]
* Assertions and related support functions have been ported
  from jsunit. [DB]
* Tests of the assertion functions have also been ported
  from jsunit and work on firefox 3 and IE 6. [DB]

